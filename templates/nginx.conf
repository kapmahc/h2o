# {{name}}
{{#if .Ssl}}
server {
	listen 80;
	server_name {{name}};
	rewrite ^(.*) https://$host$1 permanent;
}
{{/if}}

upstream {{name}}_prod {
	server localhost:{{port}} fail_timeout=0;
}

server {
{{#if ssl}}
	listen 443;
	ssl  on;
	ssl_certificate  /etc/ssl/certs/{{name}}.crt;
	ssl_certificate_key  /etc/ssl/private/{{name}}.key;
	ssl_session_timeout  5m;
	ssl_protocols  SSLv2 SSLv3 TLSv1;
	ssl_ciphers  RC4:HIGH:!aNULL:!MD5;
	ssl_prefer_server_ciphers  on;
{{else}}
	listen 80;
{{/if}}
	client_max_body_size 4G;
	keepalive_timeout 10;
	proxy_buffers 16 64k;
	proxy_buffer_size 128k;
	server_name www.{{name}};

	access_log /var/log/nginx/{{name}}.access.log;
	error_log /var/log/nginx/{{name}}.error.log;

	location /3rd/ {
		alias "{{root}}/node_modules/";
		gzip_static on;
		expires 1d;
		access_log off;
		add_header Cache-Control "public";
	}

	location /assets/ {
		alias "{{root}}/themes/{{theme}}/assets/";
		gzip_static on;
		expires 1d;
		access_log off;
		add_header Cache-Control "public";
	}

	location ~* \.(?:rss|atom)$ {
		expires 12h;
		access_log off;
		add_header Cache-Control "public";
	}

	location / {
		try_files /_not_exists_ @backend;
	}

	location @backend {
	{{#if ssl}}
		proxy_set_header X-Forwarded-Proto https;
	{{else}}
		proxy_set_header X-Forwarded-Proto http;
	{{/if}}
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_redirect off;
		proxy_pass http://{{name}}_prod;
		# limit_req zone=one;
	}
}
